// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistencia;

#nullable disable

namespace Persistencia.Data.Migrations
{
    [DbContext(typeof(MainContext))]
    partial class MainContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Dominio.Entities.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NroCedula")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("cliente", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Apellidos = "Pérez",
                            Email = "juan.perez@example.com",
                            Nombres = "Juan",
                            NroCedula = "1234567890",
                            Telefono = "1234567890"
                        },
                        new
                        {
                            Id = 2,
                            Apellidos = "González",
                            Email = "maria.gonzalez@example.com",
                            Nombres = "María",
                            NroCedula = "0987654321",
                            Telefono = "0987654321"
                        },
                        new
                        {
                            Id = 3,
                            Apellidos = "López",
                            Email = "carlos.lopez@example.com",
                            Nombres = "Carlos",
                            NroCedula = "5678901234",
                            Telefono = "5678901234"
                        },
                        new
                        {
                            Id = 4,
                            Apellidos = "Rodríguez",
                            Email = "laura.rodriguez@example.com",
                            Nombres = "Laura",
                            NroCedula = "9876543210",
                            Telefono = "9876543210"
                        },
                        new
                        {
                            Id = 5,
                            Apellidos = "Martínez",
                            Email = "pedro.martinez@example.com",
                            Nombres = "Pedro",
                            NroCedula = "5432109876",
                            Telefono = "5432109876"
                        },
                        new
                        {
                            Id = 6,
                            Apellidos = "Sánchez",
                            Email = "ana.sanchez@example.com",
                            Nombres = "Ana",
                            NroCedula = "1230987654",
                            Telefono = "1230987654"
                        },
                        new
                        {
                            Id = 7,
                            Apellidos = "Torres",
                            Email = "luis.torres@example.com",
                            Nombres = "Luis",
                            NroCedula = "8765432109",
                            Telefono = "8765432109"
                        },
                        new
                        {
                            Id = 8,
                            Apellidos = "Díaz",
                            Email = "sofia.diaz@example.com",
                            Nombres = "Sofía",
                            NroCedula = "6789012345",
                            Telefono = "6789012345"
                        },
                        new
                        {
                            Id = 9,
                            Apellidos = "Gómez",
                            Email = "javier.gomez@example.com",
                            Nombres = "Javier",
                            NroCedula = "3456789012",
                            Telefono = "3456789012"
                        },
                        new
                        {
                            Id = 10,
                            Apellidos = "Luna",
                            Email = "marcela.luna@example.com",
                            Nombres = "Marcela",
                            NroCedula = "2109876543",
                            Telefono = "2109876543"
                        });
                });

            modelBuilder.Entity("Dominio.Entities.Compra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdProducto");

                    b.ToTable("compra", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cantidad = 3,
                            Fecha = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCliente = 1,
                            IdProducto = 1
                        },
                        new
                        {
                            Id = 2,
                            Cantidad = 2,
                            Fecha = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCliente = 2,
                            IdProducto = 2
                        },
                        new
                        {
                            Id = 3,
                            Cantidad = 4,
                            Fecha = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCliente = 3,
                            IdProducto = 3
                        },
                        new
                        {
                            Id = 4,
                            Cantidad = 5,
                            Fecha = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCliente = 4,
                            IdProducto = 4
                        },
                        new
                        {
                            Id = 5,
                            Cantidad = 2,
                            Fecha = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCliente = 5,
                            IdProducto = 5
                        },
                        new
                        {
                            Id = 6,
                            Cantidad = 3,
                            Fecha = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCliente = 6,
                            IdProducto = 6
                        },
                        new
                        {
                            Id = 7,
                            Cantidad = 1,
                            Fecha = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCliente = 7,
                            IdProducto = 7
                        },
                        new
                        {
                            Id = 8,
                            Cantidad = 4,
                            Fecha = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCliente = 8,
                            IdProducto = 8
                        },
                        new
                        {
                            Id = 9,
                            Cantidad = 2,
                            Fecha = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCliente = 9,
                            IdProducto = 9
                        },
                        new
                        {
                            Id = 10,
                            Cantidad = 3,
                            Fecha = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCliente = 10,
                            IdProducto = 10
                        });
                });

            modelBuilder.Entity("Dominio.Entities.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("PrecioCompra")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<decimal>("PrecioVenta")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<string>("Referencia")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("producto", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Fecha = new DateOnly(2023, 10, 1),
                            Nombre = "Producto A",
                            PrecioCompra = 10.0m,
                            PrecioVenta = 15.0m,
                            Referencia = "ABC123",
                            Stock = 100
                        },
                        new
                        {
                            Id = 2,
                            Fecha = new DateOnly(2023, 10, 1),
                            Nombre = "Producto B",
                            PrecioCompra = 12.0m,
                            PrecioVenta = 18.0m,
                            Referencia = "DEF456",
                            Stock = 200
                        },
                        new
                        {
                            Id = 3,
                            Fecha = new DateOnly(2023, 10, 1),
                            Nombre = "Producto C",
                            PrecioCompra = 8.0m,
                            PrecioVenta = 14.0m,
                            Referencia = "GHI789",
                            Stock = 50
                        },
                        new
                        {
                            Id = 4,
                            Fecha = new DateOnly(2023, 10, 1),
                            Nombre = "Producto D",
                            PrecioCompra = 9.0m,
                            PrecioVenta = 16.0m,
                            Referencia = "JKL012",
                            Stock = 150
                        },
                        new
                        {
                            Id = 5,
                            Fecha = new DateOnly(2023, 10, 1),
                            Nombre = "Producto E",
                            PrecioCompra = 11.0m,
                            PrecioVenta = 20.0m,
                            Referencia = "MNO345",
                            Stock = 250
                        },
                        new
                        {
                            Id = 6,
                            Fecha = new DateOnly(2023, 10, 1),
                            Nombre = "Producto F",
                            PrecioCompra = 7.0m,
                            PrecioVenta = 12.0m,
                            Referencia = "PQR678",
                            Stock = 30
                        },
                        new
                        {
                            Id = 7,
                            Fecha = new DateOnly(2023, 10, 1),
                            Nombre = "Producto G",
                            PrecioCompra = 14.0m,
                            PrecioVenta = 22.0m,
                            Referencia = "STU901",
                            Stock = 80
                        },
                        new
                        {
                            Id = 8,
                            Fecha = new DateOnly(2023, 10, 1),
                            Nombre = "Producto H",
                            PrecioCompra = 10.5m,
                            PrecioVenta = 19.0m,
                            Referencia = "VWX234",
                            Stock = 120
                        },
                        new
                        {
                            Id = 9,
                            Fecha = new DateOnly(2023, 10, 1),
                            Nombre = "Producto I",
                            PrecioCompra = 6.0m,
                            PrecioVenta = 13.0m,
                            Referencia = "YZA567",
                            Stock = 40
                        },
                        new
                        {
                            Id = 10,
                            Fecha = new DateOnly(2023, 10, 1),
                            Nombre = "Producto J",
                            PrecioCompra = 8.0m,
                            PrecioVenta = 15.0m,
                            Referencia = "BCD890",
                            Stock = 60
                        });
                });

            modelBuilder.Entity("Dominio.Entities.Compra", b =>
                {
                    b.HasOne("Dominio.Entities.Cliente", "Cliente")
                        .WithMany("Compras")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Producto", "Producto")
                        .WithMany("Compras")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Dominio.Entities.Cliente", b =>
                {
                    b.Navigation("Compras");
                });

            modelBuilder.Entity("Dominio.Entities.Producto", b =>
                {
                    b.Navigation("Compras");
                });
#pragma warning restore 612, 618
        }
    }
}
